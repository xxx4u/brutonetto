"use strict";Application.Services.factory("$oauth2ConnectorFactory",["$rootScope","$configuration","$constant","$logger","$http","$q","$base64",function(n,t,i,r,u,f,e){function o(){function r(){var t=this;t.requestRetryQueue=[],n.$on("event:authorization:access-token-expired",function(){n.$logger.log({level:i.LOG_LEVEL_ERROR,message:"event:authorization:access-token-expired"})}),n.$on("event:authorization:access-token-refresh-success",function(t,r){n.$logger.log({level:i.LOG_LEVEL_INFO,message:"event:authorization:access-token-refresh-success",data:r})}),n.$on("event:authorization:access-token-refresh-error",function(t,r){n.$logger.log({level:i.LOG_LEVEL_ERROR,message:"event:authorization:access-token-refresh-error",data:r})}),n.$on("event:oauth-connector:http-get-success",function(t,r){n.$logger.log({level:i.LOG_LEVEL_DEBUG,message:"event:oauth-connector:http-get-success",data:r})}),n.$on("event:oauth-connector:http-get-error",function(t,r){n.$logger.log({level:i.LOG_LEVEL_ERROR,message:"event:oauth-connector:http-get-error",data:r})}),n.$on("event:oauth-connector:http-post-success",function(t,r){n.$logger.log({level:i.LOG_LEVEL_DEBUG,message:"event:oauth-connector:http-post-success",data:r})}),n.$on("event:oauth-connector:http-post-error",function(t,r){n.$logger.log({level:i.LOG_LEVEL_ERROR,message:"event:oauth-connector:http-post-error",data:r})}),n.$on("event:oauth-connector:request-retry-success",function(t,r){n.$logger.log({level:i.LOG_LEVEL_INFO,message:"event:oauth-connector:request-retry-success",data:r})}),n.$on("event:oauth-connector:request-retry-error",function(t,r){n.$logger.log({level:i.LOG_LEVEL_ERROR,message:"event:oauth-connector:request-retry-error",data:r})})}var o=this;return r.prototype.getClientAccessToken=function(n){var r=this,i=f.defer(),t=angular.extend({authenticationEndpoint:null,clientIdentifier:null,clientSecret:null,scope:null,grantType:"client_credentials"},n),o=e.encode(t.clientIdentifier+":"+t.clientSecret);return u.defaults.headers.common.Authorization="Basic "+o,u.post(t.authenticationEndpoint,{scope:t.scope,grant_type:t.grantType},{headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},transformRequest:r.transformToRequestParameters}).success(function(n){i.resolve(n)}).error(function(n){i.reject(n)}),i.promise},r.prototype.exchangeUserCredentialForAccessToken=function(n){var r=this,i=f.defer(),t=angular.extend({authenticationEndpoint:null,clientIdentifier:"",clientSecret:"",username:"",password:"",scope:"",grantType:"password"},n),o=e.encode(t.clientIdentifier+":"+t.clientSecret);return u.defaults.headers.common.Authorization="Basic "+o,u.post(t.authenticationEndpoint,{username:t.username,password:t.password,scope:t.scope,grant_type:t.grantType},{headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},transformRequest:r.transformToRequestParameters}).success(function(n){i.resolve(n)}).error(function(n){i.reject(n)}),i.promise},r.prototype.refreshUserAccessToken=function(n){var r=this,i=f.defer(),t=angular.extend({authenticationEndpoint:null,clientIdentifier:"",clientSecret:"",accessToken:"",grant_type:"refresh_token"},n),o=e.encode(t.clientIdentifier+":"+t.clientSecret);return u.defaults.headers.common.Authorization="Basic "+o,u.post(t.authenticationEndpoint,{grant_type:t.grant_type,refresh_token:t.accessToken.refresh_token},{headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},transformRequest:r.transformToRequestParameters}).success(function(n){i.resolve(n)}).error(function(n){i.reject(n)}),i.promise},r.prototype.handleUnauthorizedRequest=function(r){var u=this,f;if(u.requestRetryQueue.push(r),r.settings.onBehalfOf===i.ON_BEHALF_OF_USER)f={authenticationEndpoint:t.get(i.LOCAL_STORAGE,"application.security.context."+r.settings.securityContext+".oauth.authenticationEndpoint"),clientIdentifier:t.get(i.LOCAL_STORAGE,"application.security.context."+r.settings.securityContext+".oauth.clientIdentifier"),clientSecret:t.get(i.LOCAL_STORAGE,"application.security.context."+r.settings.securityContext+".oauth.clientSecret"),accessToken:t.get(i.LOCAL_STORAGE,"application.security.context."+r.settings.securityContext+".oauth.userAccessToken")},u.refreshUserAccessToken(f).then(function(f){t.set(i.LOCAL_STORAGE,"application.security.context."+r.settings.securityContext+".oauth.userAccessToken",f),n.$emit("event:authorization:user-access-token-refresh-success",f);var e=Enumerable.From(u.requestRetryQueue).Where(function(n){return n.settings.securityContext===r.settings.securityContext&&n.settings.onBehalfOf===i.ON_BEHALF_OF_USER}).ToArray();angular.forEach(e,function(n){u.retryRequest(n)}),u.requestRetryQueue=Enumerable.From(u.requestRetryQueue).Where(function(n){return n.settings.securityContext!==r.settings.securityContext&&n.settings.onBehalfOf!==i.ON_BEHALF_OF_USER}).ToArray()},function(t){n.$emit("event:authorization:user-access-token-refresh-error",t)});else if(r.settings.onBehalfOf===i.ON_BEHALF_OF_CLIENT)f={authenticationEndpoint:t.get(i.LOCAL_STORAGE,"application.security.context."+r.settings.securityContext+".oauth.authenticationEndpoint"),clientIdentifier:t.get(i.LOCAL_STORAGE,"application.security.context."+r.settings.securityContext+".oauth.clientIdentifier"),clientSecret:t.get(i.LOCAL_STORAGE,"application.security.context."+r.settings.securityContext+".oauth.clientSecret")},u.getClientAccessToken(f).then(function(f){t.set(i.LOCAL_STORAGE,"application.security.context."+r.settings.securityContext+".oauth.clientAccessToken",f),n.$emit("event:authorization:client-access-token-request-success",f);var e=Enumerable.From(u.requestRetryQueue).Where(function(n){return n.settings.securityContext===r.settings.securityContext&&n.settings.onBehalfOf===i.ON_BEHALF_OF_CLIENT}).ToArray();angular.forEach(e,function(n){u.retryRequest(n)}),u.requestRetryQueue=Enumerable.From(u.requestRetryQueue).Where(function(n){return n.settings.securityContext!==r.settings.securityContext&&n.settings.onBehalfOf!==i.ON_BEHALF_OF_CLIENT}).ToArray()},function(t){n.$emit("event:authorization:client-access-token-request-error",t)});else throw"UNSUPPORTED REQUEST RETRY";},r.prototype.retryRequest=function(t){var i=this;i.setAuthorizationHeader(t.settings),u(t.config).success(function(i){n.$emit("event:oauth-connector:request-retry-success",i),t.deferred.resolve(i)}).error(function(i,r,u,f){var e={data:i,status:r,header:u(),config:angular.toJson(f)};n.$emit("event:oauth-connector:request-retry-error",e),t.deferred.reject(i)})},r.prototype.get=function(t){var e=this,i=angular.extend({securityContext:null,serviceName:null,serviceEndpoint:null,onBehalfOf:null},t),r;if(!i.securityContext)throw"SECURITY CONTEXT PARAMETER CANNOT BE EMPTY";if(!i.serviceEndpoint)throw"SERVICE ENDPOINT PARAMETER CANNOT BE EMPTY";return e.setAuthorizationHeader(i),r=f.defer(),u.get(i.serviceEndpoint).success(function(t){n.$emit("event:oauth-connector:http-get-success",t),r.resolve(t)}).error(function(t,u,f,o){var s,h;u==401?(s={settings:i,deferred:r,config:o},n.$emit("event:authorization:access-token-expired",s),e.handleUnauthorizedRequest(s)):(h={data:t,status:u,header:f(),config:angular.toJson(o)},n.$emit("event:oauth-connector:http-get-error",h),r.reject(t))}),r.promise},r.prototype.post=function(t,r){var s=this,e=angular.extend({securityContext:null,serviceName:null,serviceEndpoint:null,onBehalfOf:null},t),o;if(!e.securityContext)throw"SECURITY CONTEXT PARAMETER CANNOT BE EMPTY";if(!e.serviceEndpoint)throw"SERVICE ENDPOINT PARAMETER CANNOT BE EMPTY";return s.setAuthorizationHeader(e),o=f.defer(),u.post(e.serviceEndpoint,r).success(function(t){n.$logger.log({level:i.LOG_LEVEL_DEBUG,message:"event:oauth-connector:http-post-success",data:t}),o.resolve(t)}).error(function(t,i,r,u){var f,h;i==401?(f={settings:e,deferred:o,config:u},n.$emit("event:authorization:access-token-expired",f),s.handleUnauthorizedRequest(f)):(h={data:t,status:i,header:r(),config:angular.toJson(u)},n.$emit("event:oauth-connector:http-post-error",h),o.reject(t))}),o.promise},r.prototype.setAuthorizationHeader=function(n){var r=null,f;switch(n.onBehalfOf){case i.ON_BEHALF_OF_CLIENT:r=t.get(i.LOCAL_STORAGE,"application.security.context."+n.securityContext+".oauth.clientAccessToken");break;case i.ON_BEHALF_OF_USER:r=t.get(i.LOCAL_STORAGE,"application.security.context."+n.securityContext+".oauth.userAccessToken")}if(r&&r.access_token)u.defaults.headers.common.Authorization="Bearer "+r.access_token;else{u.defaults.headers.common.Authorization=null,f="NO LONGER AUTHENTICATED FOR THE SECURITY CONTEXT ("+n.securityContext+")";throw f;}},r.prototype.transformToRequestParameters=function(n){return $.param(n)},new r}return o}]),Application.Services.factory("$oauth2Connector",["$oauth2ConnectorFactory",function(n){return n()}]);
//@ sourceMappingURL=application-oauth2-connector.min.js.map