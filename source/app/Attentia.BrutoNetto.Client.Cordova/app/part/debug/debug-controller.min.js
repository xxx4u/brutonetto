Application.Controllers.controller("debug.controller",["$scope","$logger","$interval",function(n,t){var i=this;n.$on("$stateChangeSuccess",function(){n.logEvents=i.filterLogEvents(t.getLogEvents(),n.logEventLevels),n.selectedLogEvent=i.getLogEvent(n.logEvents,n.$stateParams.id)}),n.$on("event:application:log-events-changed",function(t,r){n.logEvents=i.filterLogEvents(r,n.logEventLevels)}),n.$watch("selectedLogEvent",function(t){t?$("#logEventDetail").appendTo("body").modal("show"):($("#logEventDetail").appendTo("div[ui-view]").modal("hide"),n.$state.transitionTo("debug"))}),n.logEvents=[],n.selectedLogEvent=null,n.logEventLevels=[{level:"DEBUG",isVisible:!1},{level:"INFO",isVisible:!1},{level:"WARN",isVisible:!1},{level:"ERROR",isVisible:!0},{level:"FATAL",isVisible:!0}],n.renderDone=function(){n.$emit("event:application:resize-requested")},n.toggleLogLevelVisibility=function(r){console.log(r),n.logEvents=i.filterLogEvents(t.getLogEvents(),n.logEventLevels)},n.selectEvent=function(t){n.$state.transitionTo("debug.detail",{id:t.id})},n.unselectEvent=function(){n.selectedLogEvent=null},n.selectPreviousEvent=function(){var t=i.getPreviousLogEventID(n.logEvents,n.selectedLogEvent.id);t&&n.$state.transitionTo("debug.detail",{id:t})},n.selectNextEvent=function(){var t=i.getNextLogEventID(n.logEvents,n.selectedLogEvent.id);t&&n.$state.transitionTo("debug.detail",{id:t})},i.filterLogEvents=function(n,t){var i=Enumerable.From(t).Where(function(n){return n.isVisible}).ToArray(),n;return console.log(i),Enumerable.From(n).Where(function(n){return Enumerable.From(i).Any(function(t){return console.log(n),console.log(t),n.level==t.level})}).OrderByDescending(function(n){return n.timestamp}).ToArray()},i.getLogEvent=function(n,t){return Enumerable.From(n).Where(function(n){return n.id==t}).FirstOrDefault()},i.getPreviousLogEventID=function(n,t){var i=Enumerable.From(n).IndexOf(Enumerable.From(n).Where(function(n){return n.id==t}).Single())+1,t=i<=n.length?n[i].id:null;return t},i.getNextLogEventID=function(n,t){var i=Enumerable.From(n).IndexOf(Enumerable.From(n).Where(function(n){return n.id==t}).Single())-1,t=i>=0?n[i].id:null;return t}}]);
//@ sourceMappingURL=debug-controller.min.js.map